[
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "f",
        "command": "filesExplorer.findInFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "/",
        "command": "list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "tab",
        "command": "search.action.focusSearchList",
        "when": "sideBarFocus && hasSearchResult && activeViewlet == 'workbench.view.search'"
    }, 
    {
        "key": "tab",
        "command": "list.focusLast",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
    }, 
    {
        "key": "enter",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "escape",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "right",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+e",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "down",
        "command": "editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.replaceOne",
        "when": "replaceInputFocussed"
    },
    {
        "command": "runCommands",
        "key": "enter",
        "args": {
            "commands": [
                "editor.action.replaceAll",
                "closeFindWidget"
            ]
        },
        "when": "replaceInputFocussed"
    },
// ----------------------------------------- SPLIT SCREEN NAVIGATION ---------------------------------------------------------------
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusLeftGroup",
        "when": "!sideBarFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        // Special case: when in first editor group (pane), go to sidebar if visible 
        "key": "ctrl+h",
        "command": "workbench.action.focusSideBar",
        "when": "!sideBarFocus && vim.active && vim.mode != 'Insert' && activeEditorGroupIndex == 1 && sideBarVisible"
    },
    {
        // Special case: when in side bar or first pane if sidebar is not visible,go to last editor group
        "key": "ctrl+h",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus || (!sideBarVisible && !sideBarFocus && activeEditorGroupIndex == 1 && vim.mode != 'Insert')" 
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusRightGroup",
        "when": "!sideBarFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        // Special case: when in sidebar, go right (back to 1st open editor group)
        "key": "ctrl+l",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus"
    },
    {
        // Special case: when in last editor group, go to sidebar
        "key": "ctrl+l",
        "command": "workbench.action.focusSideBar",
        "when": "!sideBarFocus && activeEditorGroupLast && vim.active && vim.mode != 'Insert' && sideBarVisible"
    },
    {
        // Special case: when in last editor group, go to first if sidebar is not visible
        "key": "ctrl+l",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "!sideBarFocus && activeEditorGroupLast && vim.active && vim.mode != 'Insert' && !sideBarVisible"
    },
    // Pane resizing
    // When in last editor group, reverse the resize direction. (mimics smart-splits.nvim)
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.decreaseViewWidth",
        "when": "(!multipleEditorGroups || (multipleEditorGroups && !activeEditorGroupLast)) && !sideBarFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.increaseViewWidth",
        "when": "((multipleEditorGroups && activeEditorGroupLast) || (!multipleEditorGroups && sideBarVisible)) && !sideBarFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.decreaseViewSize",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.increaseViewWidth",
        "when": "(!multipleEditorGroups || (multipleEditorGroups && !activeEditorGroupLast)) && !sideBarFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.decreaseViewWidth",
        "when": "((multipleEditorGroups && activeEditorGroupLast) || (!multipleEditorGroups && sideBarVisible)) && !sideBarFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.increaseViewSize",
        "when": "sideBarFocus"
    },
    // Up/down navigation only works with terminal window
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.focus",
        "when": "(editorTextFocus || sideBarFocus) && terminal.active && terminalIsOpen && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminal.active && terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminal.active && terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.focus",
        "when": "(editorTextFocus || sideBarFocus) && terminal.active && terminalIsOpen && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.increaseViewHeight",
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.decreaseViewHeight",
    },
    {
        "key": "ctrl+shift+left",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "vim.active && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+shift+right",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "vim.active && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+shift+up",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "when": "vim.active && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+shift+down",
        "command": "workbench.action.moveActiveEditorGroupDown",
        "when": "vim.active && vim.mode == 'Normal'"
    },
    // Split terminal navigation
    {
        "key": "ctrl+\\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
// -------------------------------------------------REMOVED KEYBINDINGS---------------------------------------------------------------------
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "enter",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+[",
        "command": "-editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
]
